buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/libs-snapshot' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE"
    }
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'org.student'
version '0.1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

bootJar {
    launchScript()
}

dependencies {
    compile(
            "com.h2database:h2:1.4.197",
            "javax.xml.bind:jaxb-api:2.3.0",
            "org.projectlombok:lombok:1.16.20",
            "org.springframework.boot:spring-boot-starter-websocket",
            "org.springframework.boot:spring-boot-starter-data-jpa",
            "org.webjars:webjars-locator-core",
            "org.webjars:sockjs-client:1.1.2",
            "org.webjars:stomp-websocket:2.3.3",
            "org.webjars.npm:react:16.3.1",
            "org.webjars.npm:react-dom:16.3.1",
            "org.webjars.npm:babel-standalone:6.26.0"
    )
    testCompile(
            "org.assertj:assertj-core:3.9.1",
            "org.mockito:mockito-core:2.18.3",
            "org.junit.jupiter:junit-jupiter-api:5.1.1"
    )
    testRuntime(
            "org.junit.jupiter:junit-jupiter-engine:5.1.1",
            "org.junit.platform:junit-platform-launcher:1.2.0",
            "org.junit.platform:junit-platform-runner:1.2.0"
    )


}

jacoco {
    toolVersion = "0.8.0"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

test {
    useJUnitPlatform {
        includeTags 'unit'
    }
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}